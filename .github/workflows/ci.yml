name: CI

on:
  push:

concurrency:
  group: ${{ github.actor }}-${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  node-build:
    name: 🏗️ Build Node app
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Check-out
        uses: actions/checkout@v4
      - name: 🧰 Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "22.2"
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: 🧰 Install Node dependencies
        run: yarn
      - name: 🏗️ Build Node app
        run: yarn build
      - name: 📤 Upload app for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/
  node-check:
    name: 🔍 Check Node app code
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Check-out
        uses: actions/checkout@v4
      - name: 🧰 Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "22.2"
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: 🧰 Install Node dependencies
        run: yarn --dev
      - name: 🔍 Check Node app code
        run: yarn lint
  node-security:
    name: 🔍 Check Node app security
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Check-out
        uses: actions/checkout@v4
      - name: 🧰 Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "22.2"
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: 🧰 Install Node dependencies
        run: yarn --dev
      - name: 🔍 Check Node app security
        run: yarn audit
  node-test:
    name: 🧪 Test Node app
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Check-out
        uses: actions/checkout@v4
      - name: 🧰 Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "22.2"
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: 🧰 Install Node dependencies
        run: yarn --dev
      - name: 🧪 Test Node app
        run: yarn test --coverage --coverage.reporter json
      - name: 📤 Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/coverage-final.json
      - name: 📤 Upload Cypress sceenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: Cypress sceenshots
          path: cypress/screenshots
      - name: 📤 Upload Cypress videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Cypress videos
          path: cypress/videos
  github-pages-deploy:
    name: 🚀 Deploy to GitHub Pages
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs:
      - node-build
      - node-check
      - node-security
      - node-test
    permissions:
      pages: write
      id-token: write
    environment:
      name: GitHub Pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  github-release:
    name: 🚀 Create GitHub release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs:
      - node-build
      - node-check
      - node-security
      - node-test
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Check-out
        uses: actions/checkout@v4
      - name: 🚀 Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
